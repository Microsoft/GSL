; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27025.1 

	TITLE	C:\projects\gsl\tests\span_compile_only.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	__TI3?AUfail_fast@gsl@@
PUBLIC	__CTA3?AUfail_fast@gsl@@
PUBLIC	??_R0?AUfail_fast@gsl@@@8			; gsl::fail_fast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AUfail_fast@gsl@@@8??0fail_fast@gsl@@QAE@ABU01@@Z12
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
PUBLIC	?isBinaryExpression@?$UnaryExpr@_N@Catch@@EBE_NXZ ; Catch::UnaryExpr<bool>::isBinaryExpression
PUBLIC	?getResult@?$UnaryExpr@_N@Catch@@EBE_NXZ	; Catch::UnaryExpr<bool>::getResult
PUBLIC	?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; Catch::UnaryExpr<bool>::streamReconstructedExpression
PUBLIC	??_7?$UnaryExpr@_N@Catch@@6B@			; Catch::UnaryExpr<bool>::`vftable'
PUBLIC	??_G?$UnaryExpr@_N@Catch@@UAEPAXI@Z		; Catch::UnaryExpr<bool>::`scalar deleting destructor'
PUBLIC	??_7ITransientExpression@Catch@@6B@		; Catch::ITransientExpression::`vftable'
PUBLIC	??_GITransientExpression@Catch@@UAEPAXI@Z	; Catch::ITransientExpression::`scalar deleting destructor'
PUBLIC	??_C@_0ED@GGAHHHOA@GSL?3?5Precondition?5failure?5at?5c?3@ ; `string'
PUBLIC	??_C@_0ED@HPBMEGKB@GSL?3?5Precondition?5failure?5at?5c?3@ ; `string'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ITransientExpression@Catch@@6B@		; Catch::ITransientExpression::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUITransientExpression@Catch@@@8		; Catch::ITransientExpression `RTTI Type Descriptor'
PUBLIC	??_R3ITransientExpression@Catch@@8		; Catch::ITransientExpression::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ITransientExpression@Catch@@8		; Catch::ITransientExpression::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ITransientExpression@Catch@@8	; Catch::ITransientExpression::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$UnaryExpr@_N@Catch@@6B@			; Catch::UnaryExpr<bool>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$UnaryExpr@_N@Catch@@@8		; Catch::UnaryExpr<bool> `RTTI Type Descriptor'
PUBLIC	??_R3?$UnaryExpr@_N@Catch@@8			; Catch::UnaryExpr<bool>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$UnaryExpr@_N@Catch@@8			; Catch::UnaryExpr<bool>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$UnaryExpr@_N@Catch@@8		; Catch::UnaryExpr<bool>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4fail_fast@gsl@@6B@				; gsl::fail_fast::`RTTI Complete Object Locator'
PUBLIC	??_R3fail_fast@gsl@@8				; gsl::fail_fast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2fail_fast@gsl@@8				; gsl::fail_fast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@fail_fast@gsl@@8			; gsl::fail_fast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??1fail_fast@gsl@@UAE@XZ			; gsl::fail_fast::~fail_fast
PUBLIC	??0fail_fast@gsl@@QAE@ABU01@@Z			; gsl::fail_fast::fail_fast
PUBLIC	??_7fail_fast@gsl@@6B@				; gsl::fail_fast::`vftable'
PUBLIC	??_Gfail_fast@gsl@@UAEPAXI@Z			; gsl::fail_fast::`scalar deleting destructor'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_C@_0BE@FAFDKEMK@default_constructor@		; `string'
PUBLIC	??_C@_0CM@KPAFLPEB@c?3?2projects?2gsl?2tests?2span_comp@ ; `string'
PUBLIC	??_C@_0CH@JINBLNPO@?$CIs?4size?$CI?$CJ?5?$DN?$DN?50?5?$CG?$CG?5s?4data?$CI?$CJ?5?$DN?$DN?5n@ ; `string'
PUBLIC	??_C@_05GCOJDIEO@CHECK@				; `string'
PUBLIC	??_C@_0CJ@IEJGAEAC@?$CIcs?4size?$CI?$CJ?5?$DN?$DN?50?5?$CG?$CG?5cs?4data?$CI?$CJ?5?$DN?$DN@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
EXTRN	__purecall:PROC
EXTRN	??_E?$UnaryExpr@_N@Catch@@UAEPAXI@Z:PROC	; Catch::UnaryExpr<bool>::`vector deleting destructor'
EXTRN	??_EITransientExpression@Catch@@UAEPAXI@Z:PROC	; Catch::ITransientExpression::`vector deleting destructor'
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Efail_fast@gsl@@UAEPAXI@Z:PROC		; gsl::fail_fast::`vector deleting destructor'
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IEJGAEAC@?$CIcs?4size?$CI?$CJ?5?$DN?$DN?50?5?$CG?$CG?5cs?4data?$CI?$CJ?5?$DN?$DN@
CONST	SEGMENT
??_C@_0CJ@IEJGAEAC@?$CIcs?4size?$CI?$CJ?5?$DN?$DN?50?5?$CG?$CG?5cs?4data?$CI?$CJ?5?$DN?$DN@ DB '('
	DB	'cs.size() == 0 && cs.data() == nullptr)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GCOJDIEO@CHECK@
CONST	SEGMENT
??_C@_05GCOJDIEO@CHECK@ DB 'CHECK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JINBLNPO@?$CIs?4size?$CI?$CJ?5?$DN?$DN?50?5?$CG?$CG?5s?4data?$CI?$CJ?5?$DN?$DN?5n@
CONST	SEGMENT
??_C@_0CH@JINBLNPO@?$CIs?4size?$CI?$CJ?5?$DN?$DN?50?5?$CG?$CG?5s?4data?$CI?$CJ?5?$DN?$DN?5n@ DB '('
	DB	's.size() == 0 && s.data() == nullptr)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KPAFLPEB@c?3?2projects?2gsl?2tests?2span_comp@
CONST	SEGMENT
??_C@_0CM@KPAFLPEB@c?3?2projects?2gsl?2tests?2span_comp@ DB 'c:\projects\'
	DB	'gsl\tests\span_compile_only.cpp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FAFDKEMK@default_constructor@
CONST	SEGMENT
??_C@_0BE@FAFDKEMK@default_constructor@ DB 'default_constructor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_7fail_fast@gsl@@6B@
CONST	SEGMENT
??_7fail_fast@gsl@@6B@ DD FLAT:??_R4fail_fast@gsl@@6B@	; gsl::fail_fast::`vftable'
	DD	FLAT:??_Efail_fast@gsl@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@fail_fast@gsl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@fail_fast@gsl@@8 DD FLAT:??_R0?AUfail_fast@gsl@@@8 ; gsl::fail_fast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3fail_fast@gsl@@8
rdata$r	ENDS
;	COMDAT ??_R2fail_fast@gsl@@8
rdata$r	SEGMENT
??_R2fail_fast@gsl@@8 DD FLAT:??_R1A@?0A@EA@fail_fast@gsl@@8 ; gsl::fail_fast::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3fail_fast@gsl@@8
rdata$r	SEGMENT
??_R3fail_fast@gsl@@8 DD 00H				; gsl::fail_fast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2fail_fast@gsl@@8
rdata$r	ENDS
;	COMDAT ??_R4fail_fast@gsl@@6B@
rdata$r	SEGMENT
??_R4fail_fast@gsl@@6B@ DD 00H				; gsl::fail_fast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUfail_fast@gsl@@@8
	DD	FLAT:??_R3fail_fast@gsl@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$UnaryExpr@_N@Catch@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$UnaryExpr@_N@Catch@@8 DD FLAT:??_R0?AV?$UnaryExpr@_N@Catch@@@8 ; Catch::UnaryExpr<bool>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$UnaryExpr@_N@Catch@@8
rdata$r	ENDS
;	COMDAT ??_R2?$UnaryExpr@_N@Catch@@8
rdata$r	SEGMENT
??_R2?$UnaryExpr@_N@Catch@@8 DD FLAT:??_R1A@?0A@EA@?$UnaryExpr@_N@Catch@@8 ; Catch::UnaryExpr<bool>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ITransientExpression@Catch@@8
rdata$r	ENDS
;	COMDAT ??_R3?$UnaryExpr@_N@Catch@@8
rdata$r	SEGMENT
??_R3?$UnaryExpr@_N@Catch@@8 DD 00H			; Catch::UnaryExpr<bool>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$UnaryExpr@_N@Catch@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$UnaryExpr@_N@Catch@@@8
data$r	SEGMENT
??_R0?AV?$UnaryExpr@_N@Catch@@@8 DD FLAT:??_7type_info@@6B@ ; Catch::UnaryExpr<bool> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$UnaryExpr@_N@Catch@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$UnaryExpr@_N@Catch@@6B@
rdata$r	SEGMENT
??_R4?$UnaryExpr@_N@Catch@@6B@ DD 00H			; Catch::UnaryExpr<bool>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$UnaryExpr@_N@Catch@@@8
	DD	FLAT:??_R3?$UnaryExpr@_N@Catch@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ITransientExpression@Catch@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ITransientExpression@Catch@@8 DD FLAT:??_R0?AUITransientExpression@Catch@@@8 ; Catch::ITransientExpression::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ITransientExpression@Catch@@8
rdata$r	ENDS
;	COMDAT ??_R2ITransientExpression@Catch@@8
rdata$r	SEGMENT
??_R2ITransientExpression@Catch@@8 DD FLAT:??_R1A@?0A@EA@ITransientExpression@Catch@@8 ; Catch::ITransientExpression::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ITransientExpression@Catch@@8
rdata$r	SEGMENT
??_R3ITransientExpression@Catch@@8 DD 00H		; Catch::ITransientExpression::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ITransientExpression@Catch@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUITransientExpression@Catch@@@8
data$r	SEGMENT
??_R0?AUITransientExpression@Catch@@@8 DD FLAT:??_7type_info@@6B@ ; Catch::ITransientExpression `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUITransientExpression@Catch@@', 00H
data$r	ENDS
;	COMDAT ??_R4ITransientExpression@Catch@@6B@
rdata$r	SEGMENT
??_R4ITransientExpression@Catch@@6B@ DD 00H		; Catch::ITransientExpression::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUITransientExpression@Catch@@@8
	DD	FLAT:??_R3ITransientExpression@Catch@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0ED@HPBMEGKB@GSL?3?5Precondition?5failure?5at?5c?3@
CONST	SEGMENT
??_C@_0ED@HPBMEGKB@GSL?3?5Precondition?5failure?5at?5c?3@ DB 'GSL: Precon'
	DB	'dition failure at c:\projects\gsl\include\gsl\span: 599', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@GGAHHHOA@GSL?3?5Precondition?5failure?5at?5c?3@
CONST	SEGMENT
??_C@_0ED@GGAHHHOA@GSL?3?5Precondition?5failure?5at?5c?3@ DB 'GSL: Precon'
	DB	'dition failure at c:\projects\gsl\include\gsl\span: 598', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ITransientExpression@Catch@@6B@
CONST	SEGMENT
??_7ITransientExpression@Catch@@6B@ DD FLAT:??_R4ITransientExpression@Catch@@6B@ ; Catch::ITransientExpression::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EITransientExpression@Catch@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$UnaryExpr@_N@Catch@@6B@
CONST	SEGMENT
??_7?$UnaryExpr@_N@Catch@@6B@ DD FLAT:??_R4?$UnaryExpr@_N@Catch@@6B@ ; Catch::UnaryExpr<bool>::`vftable'
	DD	FLAT:?isBinaryExpression@?$UnaryExpr@_N@Catch@@EBE_NXZ
	DD	FLAT:?getResult@?$UnaryExpr@_N@Catch@@EBE_NXZ
	DD	FLAT:?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	FLAT:??_E?$UnaryExpr@_N@Catch@@UAEPAXI@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
data$r	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AUfail_fast@gsl@@@8??0fail_fast@gsl@@QAE@ABU01@@Z12
xdata$x	SEGMENT
__CT??_R0?AUfail_fast@gsl@@@8??0fail_fast@gsl@@QAE@ABU01@@Z12 DD 00H
	DD	FLAT:??_R0?AUfail_fast@gsl@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0fail_fast@gsl@@QAE@ABU01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AUfail_fast@gsl@@@8
data$r	SEGMENT
??_R0?AUfail_fast@gsl@@@8 DD FLAT:??_7type_info@@6B@	; gsl::fail_fast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUfail_fast@gsl@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AUfail_fast@gsl@@
xdata$x	SEGMENT
__CTA3?AUfail_fast@gsl@@ DD 03H
	DD	FLAT:__CT??_R0?AUfail_fast@gsl@@@8??0fail_fast@gsl@@QAE@ABU01@@Z12
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AUfail_fast@gsl@@
xdata$x	SEGMENT
__TI3?AUfail_fast@gsl@@ DD 00H
	DD	FLAT:??1fail_fast@gsl@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AUfail_fast@gsl@@
xdata$x	ENDS
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Maklocwcs@std@@YAPA_WPB_W@Z			; std::_Maklocwcs
PUBLIC	??0fail_fast@gsl@@QAE@$$QAU01@@Z		; gsl::fail_fast::fail_fast
PUBLIC	??$throw_exception@Ufail_fast@gsl@@@details@gsl@@YAX$$QAUfail_fast@1@@Z ; gsl::details::throw_exception<gsl::fail_fast>
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??$forward@Ufail_fast@gsl@@@std@@YA$$QAUfail_fast@gsl@@AAU12@@Z ; std::forward<gsl::fail_fast>
PUBLIC	??1?$UnaryExpr@_N@Catch@@UAE@XZ			; Catch::UnaryExpr<bool>::~UnaryExpr<bool>
PUBLIC	??$stringify@_N@Detail@Catch@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_N@Z ; Catch::Detail::stringify<bool>
PUBLIC	??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	?autoRegistrar1@?A0xea02b608@@3UAutoReg@Catch@@A ; `anonymous namespace'::autoRegistrar1
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__calloc:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	__Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	??0SourceLineInfo@Catch@@QAE@PBDI@Z:PROC	; Catch::SourceLineInfo::SourceLineInfo
EXTRN	?isTrue@Catch@@YA_N_N@Z:PROC			; Catch::isTrue
EXTRN	??0StringRef@Catch@@QAE@PBD@Z:PROC		; Catch::StringRef::StringRef
EXTRN	??1StringRef@Catch@@QAE@XZ:PROC			; Catch::StringRef::~StringRef
EXTRN	?makeTestInvoker@Catch@@YAPAUITestInvoker@1@P6AXXZ@Z:PROC ; Catch::makeTestInvoker
EXTRN	??0NameAndTags@Catch@@QAE@VStringRef@1@0@Z:PROC	; Catch::NameAndTags::NameAndTags
EXTRN	??0AutoReg@Catch@@QAE@PAUITestInvoker@1@ABUSourceLineInfo@1@VStringRef@1@ABUNameAndTags@1@@Z:PROC ; Catch::AutoReg::AutoReg
EXTRN	??1AutoReg@Catch@@UAE@XZ:PROC			; Catch::AutoReg::~AutoReg
EXTRN	?convert@?$StringMaker@_N@Catch@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z:PROC ; Catch::StringMaker<bool>::convert
EXTRN	??1ITransientExpression@Catch@@UAE@XZ:PROC	; Catch::ITransientExpression::~ITransientExpression
EXTRN	??0AssertionHandler@Catch@@QAE@VStringRef@1@ABUSourceLineInfo@1@0W4Flags@ResultDisposition@1@@Z:PROC ; Catch::AssertionHandler::AssertionHandler
EXTRN	??1AssertionHandler@Catch@@QAE@XZ:PROC		; Catch::AssertionHandler::~AssertionHandler
EXTRN	?handle@AssertionHandler@Catch@@QAEXABUITransientExpression@2@@Z:PROC ; Catch::AssertionHandler::handle
EXTRN	?shouldDebugBreak@AssertionHandler@Catch@@QBE_NXZ:PROC ; Catch::AssertionHandler::shouldDebugBreak
EXTRN	?reactWithoutDebugBreak@AssertionHandler@Catch@@QBEXXZ:PROC ; Catch::AssertionHandler::reactWithoutDebugBreak
EXTRN	?useActiveException@AssertionHandler@Catch@@QAEXXZ:PROC ; Catch::AssertionHandler::useActiveException
EXTRN	?isDebuggerActive@Catch@@YA_NXZ:PROC		; Catch::isDebuggerActive
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?autoRegistrar1@?A0xea02b608@@3UAutoReg@Catch@@A DD 01H DUP (?) ; `anonymous namespace'::autoRegistrar1
_BSS	ENDS
CRT$XCU	SEGMENT
?autoRegistrar1$initializer$@?A0xea02b608@@3P6AXXZA DD FLAT:??__EautoRegistrar1@?A0xea02b608@@YAXXZ ; `anonymous namespace'::autoRegistrar1$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$0
__tryblocktable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$6
__ehfuncinfo$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$2
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	04H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QAE@PBHV?$extent_type@$0A@@details@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QAE@PBHV?$extent_type@$0A@@details@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QAE@PBHV?$extent_type@$0A@@details@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$0
__ehfuncinfo$?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QAE@PAHV?$extent_type@$0A@@details@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QAE@PAHV?$extent_type@$0A@@details@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QAE@PAHV?$extent_type@$0A@@details@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0$0A@X@?$span@$$CBH$0?0@gsl@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z$0
__ehfuncinfo$??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0$0A@X@?$span@H$0?0@gsl@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$29 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$2
__catchsym$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$28 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$0
__ehfuncinfo$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ
	DD	02H
	DD	FLAT:__tryblocktable$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ DD 02H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$28
	DD	07H
	DD	08H
	DD	09H
	DD	01H
	DD	FLAT:__catchsym$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$29
__unwindtable$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$6
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$17
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$9
	DD	06H
	DD	00H
	DD	07H
	DD	FLAT:__unwindfunclet$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$26
	DD	06H
	DD	00H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 153
	mov	al, BYTE PTR [ecx+4]
; Line 154
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 135
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
; Line 137
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN2@sentry
; Line 139
	mov	ecx, DWORD PTR [esi]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
$LN2@sentry:
; Line 106
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax+ecx+56]
	test	ecx, ecx
	je	SHORT $LN5@sentry
; Line 107
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+8]
$LN5@sentry:
; Line 144
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Ogtp
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 121
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	esi, DWORD PTR __Ostr$[ebp]
; Line 98
	mov	DWORD PTR [edi], esi
; Line 100
	mov	edx, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 87
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+esi+56]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 100
	test	ecx, ecx
	je	SHORT $LN6@sentry
; Line 101
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
	mov	edx, DWORD PTR [esi]
$LN6@sentry:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; Line 330
	mov	ecx, DWORD PTR [edx+4]
; Line 352
	mov	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 120
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; Line 352
	cmp	DWORD PTR [ecx+esi+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 122
	jne	SHORT $LN2@sentry
	mov	ecx, DWORD PTR [ecx+esi+60]
	test	ecx, ecx
	je	SHORT $LN2@sentry
	cmp	ecx, esi
	je	SHORT $LN2@sentry
; Line 123
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	mov	eax, DWORD PTR [esi]
$LN2@sentry:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; Line 352
	mov	eax, DWORD PTR [eax+4]
	cmp	DWORD PTR [eax+esi+12], 0
	sete	al
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 124
	mov	BYTE PTR [edi+4], al
; Line 125
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Ogtp
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 105
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 106
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax+ecx+56]
	test	ecx, ecx
	je	SHORT $LN2@Sentry_bas
; Line 107
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+8]
$LN2@Sentry_bas:
; Line 108
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Ogtp
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 99
	push	ebp
	mov	ebp, esp
; Line 98
	mov	edx, DWORD PTR __Ostr$[ebp]
; Line 99
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], edx
; Line 100
	mov	eax, DWORD PTR [edx]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax+edx+56]
	test	ecx, ecx
	je	SHORT $LN8@Sentry_bas
; Line 101
	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+4]
$LN8@Sentry_bas:
; Line 102
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
_TEXT	SEGMENT
__Ok$ = -36						; size = 8
__State$ = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -24						; size = 1
$T4 = -24						; size = 1
tv835 = -20						; size = 4
$T5 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Data$ = 12						; size = 4
__Size$ = 16						; size = 4
??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z PROC ; std::_Insert_string<char,std::char_traits<char>,unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 25
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR __Ostr$[ebp]
; Line 26
	xor	edi, edi
	mov	DWORD PTR __State$[ebp], edi
; Line 27
	mov	ecx, DWORD PTR [ebx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; Line 433
	mov	edx, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [edx+ebx+32]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 27
	cmp	DWORD PTR [edx+ebx+36], edi
	jl	SHORT $LN17@Insert_str
	jg	SHORT $LN103@Insert_str
	test	esi, esi
	je	SHORT $LN17@Insert_str
$LN103@Insert_str:
	mov	eax, DWORD PTR __Size$[ebp]
	cmp	esi, eax
	jbe	SHORT $LN17@Insert_str
	sub	esi, eax
	jmp	SHORT $LN18@Insert_str
$LN17@Insert_str:
	xor	esi, esi
$LN18@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 87
	mov	eax, DWORD PTR [edx+ebx+56]
	mov	edx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 98
	mov	DWORD PTR __Ok$[ebp], ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 87
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR $T2[ebp], edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 100
	test	eax, eax
	je	SHORT $LN35@Insert_str
; Line 101
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T5[ebp]
	call	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ebx]
	mov	edx, ecx
	mov	DWORD PTR $T2[ebp], ecx
$LN35@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; Line 330
	mov	eax, DWORD PTR [ecx+4]
	add	eax, ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 120
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; Line 330
	mov	DWORD PTR tv835[ebp], eax
	mov	eax, ecx
; Line 352
	mov	ebx, DWORD PTR tv835[ebp]
	cmp	DWORD PTR [ebx+12], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 122
	mov	ebx, DWORD PTR __Ostr$[ebp]
	jne	SHORT $LN31@Insert_str
	mov	ebx, DWORD PTR tv835[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 75
	mov	edx, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 122
	cmp	DWORD PTR [ebx+60], 0
	mov	ebx, DWORD PTR __Ostr$[ebp]
	je	SHORT $LN31@Insert_str
	mov	edi, DWORD PTR tv835[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 75
	mov	edx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 122
	mov	ecx, DWORD PTR [edi+60]
	mov	edi, 0
	cmp	ecx, ebx
	je	SHORT $LN31@Insert_str
; Line 123
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	mov	eax, DWORD PTR [ebx]
	mov	edx, eax
$LN31@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; Line 330
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+ebx+12]
; Line 352
	test	eax, eax
	sete	BYTE PTR __Ok$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 29
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	test	eax, eax
; Line 31
	je	SHORT $LN8@Insert_str
; Line 32
	mov	edi, 4
; Line 33
	jmp	$LN22@Insert_str
$LN8@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; Line 390
	mov	eax, DWORD PTR [ecx+ebx+20]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 36
	and	eax, 448				; 000001c0H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	cmp	eax, 64					; 00000040H
	je	SHORT $LN99@Insert_str
$LL4@Insert_str:
; Line 37
	test	esi, esi
	je	SHORT $LN3@Insert_str
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 108
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+4]
	mov	al, BYTE PTR [ecx+ebx+64]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 38
	mov	ecx, DWORD PTR [ecx+ebx+56]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 108
	mov	BYTE PTR $T4[ebp], al
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 38
	push	DWORD PTR $T4[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	eax, -1
	jne	SHORT $LN2@Insert_str
; Line 41
	mov	edi, 4
	mov	DWORD PTR __State$[ebp], edi
; Line 42
	jmp	SHORT $LL105@Insert_str
$LN2@Insert_str:
; Line 37
	dec	esi
	jmp	SHORT $LL4@Insert_str
$LN3@Insert_str:
; Line 46
	mov	edx, DWORD PTR [ebx]
$LN99@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 87
	mov	eax, DWORD PTR [edx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 46
	push	0
	push	DWORD PTR __Size$[ebp]
	push	DWORD PTR __Data$[ebp]
	mov	ecx, DWORD PTR [eax+ebx+56]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	eax, DWORD PTR __Size$[ebp]
	jne	SHORT $LN104@Insert_str
	test	edx, edx
	jne	SHORT $LN104@Insert_str
$LL105@Insert_str:
; Line 50
	test	esi, esi
	je	SHORT $LN6@Insert_str
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 108
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+4]
	mov	al, BYTE PTR [ecx+ebx+64]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 51
	mov	ecx, DWORD PTR [ecx+ebx+56]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
; Line 108
	mov	BYTE PTR $T3[ebp], al
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 51
	push	DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	eax, -1
	jne	SHORT $LN5@Insert_str
; Line 54
	or	edi, 4
; Line 55
	jmp	SHORT $LN6@Insert_str
$LN5@Insert_str:
; Line 50
	dec	esi
	jmp	SHORT $LL105@Insert_str
$LN104@Insert_str:
; Line 48
	mov	edi, 4
$LN6@Insert_str:
; Line 57
	mov	eax, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xiosbase
; Line 439
	mov	DWORD PTR [eax+ebx+32], 0
	mov	DWORD PTR [eax+ebx+36], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
	jmp	SHORT $LN111@Insert_str
__catch$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$0:
; Line 58
	mov	edx, DWORD PTR __Ostr$[ebp]
	push	1
	push	4
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	eax, $LN23@Insert_str
	ret	0
$LN23@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ios
	mov	ebx, DWORD PTR __Ostr$[ebp]
	mov	edi, DWORD PTR __State$[ebp]
$LN111@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 61
	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN22@Insert_str:
	mov	eax, DWORD PTR [ebx]
	push	0
	push	edi
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, ebx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 135
	mov	DWORD PTR __$EHRec$[ebp+12], 4
; Line 137
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	mov	esi, DWORD PTR __Ok$[ebp]
	test	al, al
	jne	SHORT $LN80@Insert_str
; Line 139
	mov	ecx, esi
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
$LN80@Insert_str:
; Line 106
	mov	ecx, DWORD PTR [esi]
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	ecx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	test	ecx, ecx
	je	SHORT $LN106@Insert_str
; Line 107
	mov	edx, DWORD PTR [ecx]
	call	DWORD PTR [edx+8]
$LN106@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; Line 63
	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$3:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ENDP ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
; Function compile flags: /Ogtp
;	COMDAT ??$?0$0A@@?$extent_type@$0?0@details@gsl@@QAE@V?$extent_type@$0A@@12@@Z
_TEXT	SEGMENT
_ext$ = 8						; size = 1
??$?0$0A@@?$extent_type@$0?0@details@gsl@@QAE@V?$extent_type@$0A@@12@@Z PROC ; gsl::details::extent_type<-1>::extent_type<-1><0>, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 333
	mov	DWORD PTR [ecx], 0
; Line 334
	mov	eax, ecx
	ret	4
??$?0$0A@@?$extent_type@$0?0@details@gsl@@QAE@V?$extent_type@$0A@@12@@Z ENDP ; gsl::details::extent_type<-1>::extent_type<-1><0>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\string
; Line 173
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3302
	mov	eax, DWORD PTR __Str$[ebp]
; Line 1825
	cmp	DWORD PTR [eax+20], 16			; 00000010H
; Line 3302
	mov	ecx, DWORD PTR [eax+16]
; Line 1815
	jb	SHORT $LN16@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 346
	mov	eax, DWORD PTR [eax]
$LN16@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\string
; Line 174
	push	ecx
	push	eax
	push	DWORD PTR __Ostr$[ebp]
	call	??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
	add	esp, 12					; 0000000cH
; Line 175
	pop	ebp
	ret	0
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$stringify@_N@Detail@Catch@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_N@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_e$ = 12						; size = 4
??$stringify@_N@Detail@Catch@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_N@Z PROC ; Catch::Detail::stringify<bool>, COMDAT
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 596
	push	ebp
	mov	ebp, esp
; Line 597
	mov	eax, DWORD PTR _e$[ebp]
	movzx	eax, BYTE PTR [eax]
	push	eax
	push	DWORD PTR ___$ReturnUdt$[ebp]
	call	?convert@?$StringMaker@_N@Catch@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; Catch::StringMaker<bool>::convert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 8
; Line 598
	pop	ebp
	ret	0
??$stringify@_N@Detail@Catch@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AB_N@Z ENDP ; Catch::Detail::stringify<bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QAE@PBHV?$extent_type@$0A@@details@2@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_ext$ = 12						; size = 1
??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QAE@PBHV?$extent_type@$0A@@details@2@@Z PROC ; gsl::span<int const ,-1>::storage_type<gsl::details::extent_type<-1> >::storage_type<gsl::details::extent_type<-1> ><gsl::details::extent_type<0> >, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 597
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QAE@PBHV?$extent_type@$0A@@details@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 596
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 600
	mov	eax, ecx
; Line 333
	mov	DWORD PTR [ecx], 0
; Line 600
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QAE@PBHV?$extent_type@$0A@@details@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QAE@PBHV?$extent_type@$0A@@details@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QAE@PBHV?$extent_type@$0A@@details@2@@Z ENDP ; gsl::span<int const ,-1>::storage_type<gsl::details::extent_type<-1> >::storage_type<gsl::details::extent_type<-1> ><gsl::details::extent_type<0> >
; Function compile flags: /Ogtp
;	COMDAT ??_G?$UnaryExpr@_N@Catch@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$UnaryExpr@_N@Catch@@UAEPAXI@Z PROC		; Catch::UnaryExpr<bool>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1ITransientExpression@Catch@@UAE@XZ	; Catch::ITransientExpression::~ITransientExpression
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN7@scalar
	push	8
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN7@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$UnaryExpr@_N@Catch@@UAEPAXI@Z ENDP		; Catch::UnaryExpr<bool>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$UnaryExpr@_N@Catch@@UAE@XZ
_TEXT	SEGMENT
??1?$UnaryExpr@_N@Catch@@UAE@XZ PROC			; Catch::UnaryExpr<bool>::~UnaryExpr<bool>, COMDAT
; _this$ = ecx
	jmp	??1ITransientExpression@Catch@@UAE@XZ	; Catch::ITransientExpression::~ITransientExpression
??1?$UnaryExpr@_N@Catch@@UAE@XZ ENDP			; Catch::UnaryExpr<bool>::~UnaryExpr<bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$UnaryExpr@_N@Catch@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lhs$ = 8						; size = 1
??0?$UnaryExpr@_N@Catch@@QAE@_N@Z PROC			; Catch::UnaryExpr<bool>::UnaryExpr<bool>, COMDAT
; _this$ = ecx
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1035
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	al, BYTE PTR _lhs$[ebp]
	mov	BYTE PTR [ecx+4], al
	mov	eax, ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR [ecx], OFFSET ??_7?$UnaryExpr@_N@Catch@@6B@
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$UnaryExpr@_N@Catch@@QAE@_N@Z ENDP			; Catch::UnaryExpr<bool>::UnaryExpr<bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_os$ = 8						; size = 4
?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z PROC ; Catch::UnaryExpr<bool>::streamReconstructedExpression, COMDAT
; _this$ = ecx
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1030
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 597
	movzx	eax, BYTE PTR [ecx+4]
; Line 1030
	mov	esi, DWORD PTR _os$[ebp]
; Line 597
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?convert@?$StringMaker@_N@Catch@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; Catch::StringMaker<bool>::convert
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	DWORD PTR $T2[ebp+20], 16		; 00000010H
; Line 1814
	lea	eax, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\string
; Line 174
	push	DWORD PTR $T2[ebp+16]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1815
	cmovae	eax, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\string
; Line 174
	push	eax
	push	esi
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1031
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\string
; Line 174
	call	??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	mov	edx, DWORD PTR $T2[ebp+20]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\string
; Line 174
	add	esp, 20					; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	edx, 16					; 00000010H
; Line 3987
	jb	SHORT $LN72@streamReco
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	mov	ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3992
	inc	edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	mov	eax, ecx
; Line 201
	cmp	edx, 4096				; 00001000H
	jb	SHORT $LN71@streamReco
; Line 118
	mov	ecx, DWORD PTR [ecx-4]
	add	edx, 35					; 00000023H
	sub	eax, ecx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	jbe	SHORT $LN71@streamReco
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN71@streamReco:
; Line 207
	push	edx
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN72@streamReco:
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1032
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
$LN91@streamReco:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?streamReconstructedExpression@?$UnaryExpr@_N@Catch@@EBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ENDP ; Catch::UnaryExpr<bool>::streamReconstructedExpression
; Function compile flags: /Ogtp
;	COMDAT ?getResult@?$UnaryExpr@_N@Catch@@EBE_NXZ
_TEXT	SEGMENT
?getResult@?$UnaryExpr@_N@Catch@@EBE_NXZ PROC		; Catch::UnaryExpr<bool>::getResult, COMDAT
; _this$ = ecx
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1028
	cmp	BYTE PTR [ecx+4], 0
	setne	al
	ret	0
?getResult@?$UnaryExpr@_N@Catch@@EBE_NXZ ENDP		; Catch::UnaryExpr<bool>::getResult
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?isBinaryExpression@?$UnaryExpr@_N@Catch@@EBE_NXZ
_TEXT	SEGMENT
?isBinaryExpression@?$UnaryExpr@_N@Catch@@EBE_NXZ PROC	; Catch::UnaryExpr<bool>::isBinaryExpression, COMDAT
; _this$ = ecx
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1027
	xor	al, al
	ret	0
?isBinaryExpression@?$UnaryExpr@_N@Catch@@EBE_NXZ ENDP	; Catch::UnaryExpr<bool>::isBinaryExpression
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QAE@PAHV?$extent_type@$0A@@details@2@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_data$ = 8						; size = 4
_ext$ = 12						; size = 1
??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QAE@PAHV?$extent_type@$0A@@details@2@@Z PROC ; gsl::span<int,-1>::storage_type<gsl::details::extent_type<-1> >::storage_type<gsl::details::extent_type<-1> ><gsl::details::extent_type<0> >, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 597
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QAE@PAHV?$extent_type@$0A@@details@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 596
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 600
	mov	eax, ecx
; Line 333
	mov	DWORD PTR [ecx], 0
; Line 600
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QAE@PAHV?$extent_type@$0A@@details@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QAE@PAHV?$extent_type@$0A@@details@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0V?$extent_type@$0A@@details@gsl@@@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QAE@PAHV?$extent_type@$0A@@details@2@@Z ENDP ; gsl::span<int,-1>::storage_type<gsl::details::extent_type<-1> >::storage_type<gsl::details::extent_type<-1> ><gsl::details::extent_type<0> >
; Function compile flags: /Ogtp
;	COMDAT ?size@?$extent_type@$0A@@details@gsl@@QBEHXZ
_TEXT	SEGMENT
?size@?$extent_type@$0A@@details@gsl@@QBEHXZ PROC	; gsl::details::extent_type<0>::size, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 323
	xor	eax, eax
	ret	0
?size@?$extent_type@$0A@@details@gsl@@QBEHXZ ENDP	; gsl::details::extent_type<0>::size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$extent_type@$0A@@details@gsl@@QAE@XZ
_TEXT	SEGMENT
??0?$extent_type@$0A@@details@gsl@@QAE@XZ PROC		; gsl::details::extent_type<0>::extent_type<0>, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 311
	mov	eax, ecx
	ret	0
??0?$extent_type@$0A@@details@gsl@@QAE@XZ ENDP		; gsl::details::extent_type<0>::extent_type<0>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
; Line 664
	push	ebp
	mov	ebp, esp
	push	esi
; Line 665
	mov	esi, DWORD PTR __Ptr$[ebp]
	push	edi
	mov	edi, esi
	lea	ecx, DWORD PTR [edi+1]
	npad	3
$LL11@Maklocstr:
	mov	al, BYTE PTR [edi]
	inc	edi
	test	al, al
	jne	SHORT $LL11@Maklocstr
	sub	edi, ecx
	inc	edi
; Line 667
	push	1
	push	edi
	call	DWORD PTR __imp__calloc
	mov	edx, eax
	add	esp, 8
; Line 670
	test	edx, edx
	je	SHORT $LN14@Maklocstr
; Line 673
	test	edi, edi
	je	SHORT $LN3@Maklocstr
	mov	ecx, edx
	sub	ecx, esi
$LL4@Maklocstr:
; Line 674
	mov	al, BYTE PTR [esi]
	lea	esi, DWORD PTR [esi+1]
	mov	BYTE PTR [ecx+esi-1], al
	sub	edi, 1
	jne	SHORT $LL4@Maklocstr
$LN3@Maklocstr:
; Line 676
	pop	edi
	mov	eax, edx
	pop	esi
; Line 677
	pop	ebp
	ret	0
$LN14@Maklocstr:
; Line 671
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN12@Maklocstr:
	int	3
??$_Maklocstr@D@std@@YAPADPBDPADABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$forward@Ufail_fast@gsl@@@std@@YA$$QAUfail_fast@gsl@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Ufail_fast@gsl@@@std@@YA$$QAUfail_fast@gsl@@AAU12@@Z PROC ; std::forward<gsl::fail_fast>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
; Line 1573
	push	ebp
	mov	ebp, esp
; Line 1574
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1575
	pop	ebp
	ret	0
??$forward@Ufail_fast@gsl@@@std@@YA$$QAUfail_fast@gsl@@AAU12@@Z ENDP ; std::forward<gsl::fail_fast>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 199
	push	ebp
	mov	ebp, esp
; Line 201
	mov	ecx, DWORD PTR __Bytes$[ebp]
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN15@Deallocate
; Line 118
	mov	eax, DWORD PTR __Ptr$[ebp]
	add	ecx, 35					; 00000023H
	mov	edx, DWORD PTR [eax-4]
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	jbe	SHORT $LN13@Deallocate
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN15@Deallocate:
; Line 201
	mov	edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:
; Line 207
	mov	DWORD PTR __Bytes$[ebp], ecx
	mov	DWORD PTR __Ptr$[ebp], edx
; Line 208
	pop	ebp
; Line 207
	jmp	??3@YAXPAXI@Z				; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$destroy@PAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPAD@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 888
	ret	0
??$destroy@PAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPAD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 329
	push	ebp
	mov	ebp, esp
; Line 330
	mov	eax, DWORD PTR __Val$[ebp]
; Line 331
	pop	ebp
	ret	0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 345
	push	ebp
	mov	ebp, esp
; Line 346
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 347
	pop	ebp
	ret	0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0$0A@X@?$span@$$CBH$0?0@gsl@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??$?0$0A@X@?$span@$$CBH$0?0@gsl@@QAE@XZ PROC		; gsl::span<int const ,-1>::span<int const ,-1><0,void>, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 384
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0$0A@X@?$span@$$CBH$0?0@gsl@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 333
	mov	DWORD PTR [ecx], 0
; Line 384
	mov	eax, ecx
; Line 596
	mov	DWORD PTR [ecx+4], 0
; Line 384
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0$0A@X@?$span@$$CBH$0?0@gsl@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0$0A@X@?$span@$$CBH$0?0@gsl@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0$0A@X@?$span@$$CBH$0?0@gsl@@QAE@XZ ENDP		; gsl::span<int const ,-1>::span<int const ,-1><0,void>
; Function compile flags: /Ogtp
;	COMDAT ?data@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QBEPBHXZ
_TEXT	SEGMENT
?data@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QBEPBHXZ PROC ; gsl::span<int const ,-1>::storage_type<gsl::details::extent_type<-1> >::data, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 602
	mov	eax, DWORD PTR [ecx+4]
	ret	0
?data@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@$$CBH$0?0@gsl@@QBEPBHXZ ENDP ; gsl::span<int const ,-1>::storage_type<gsl::details::extent_type<-1> >::data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?data@?$span@$$CBH$0?0@gsl@@QBEPBHXZ
_TEXT	SEGMENT
?data@?$span@$$CBH$0?0@gsl@@QBEPBHXZ PROC		; gsl::span<int const ,-1>::data, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 515
	mov	eax, DWORD PTR [ecx+4]
	ret	0
?data@?$span@$$CBH$0?0@gsl@@QBEPBHXZ ENDP		; gsl::span<int const ,-1>::data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?size@?$span@$$CBH$0?0@gsl@@QBEHXZ
_TEXT	SEGMENT
?size@?$span@$$CBH$0?0@gsl@@QBEHXZ PROC			; gsl::span<int const ,-1>::size, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 498
	mov	eax, DWORD PTR [ecx]
	ret	0
?size@?$span@$$CBH$0?0@gsl@@QBEHXZ ENDP			; gsl::span<int const ,-1>::size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z
_TEXT	SEGMENT
$T2 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_expr$ = 8						; size = 4
??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z PROC ; Catch::AssertionHandler::handle<bool>, COMDAT
; _this$ = ecx
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1232
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1101
	mov	eax, DWORD PTR _expr$[ebp]
; Line 1035
	mov	DWORD PTR $T2[ebp], OFFSET ??_7?$UnaryExpr@_N@Catch@@6B@
; Line 1101
	mov	al, BYTE PTR [eax]
; Line 1035
	mov	BYTE PTR $T2[ebp+4], al
; Line 1233
	lea	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	eax
	call	?handle@AssertionHandler@Catch@@QAEXABUITransientExpression@2@@Z ; Catch::AssertionHandler::handle
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1ITransientExpression@Catch@@UAE@XZ	; Catch::ITransientExpression::~ITransientExpression
; Line 1234
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$UnaryExpr@_N@Catch@@UAE@XZ
__ehhandler$??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$handle@_N@AssertionHandler@Catch@@QAEXABV?$ExprLhs@_N@1@@Z ENDP ; Catch::AssertionHandler::handle<bool>
; Function compile flags: /Ogtp
;	COMDAT ??$?0$0A@X@?$span@H$0?0@gsl@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??$?0$0A@X@?$span@H$0?0@gsl@@QAE@XZ PROC		; gsl::span<int,-1>::span<int,-1><0,void>, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 384
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0$0A@X@?$span@H$0?0@gsl@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 333
	mov	DWORD PTR [ecx], 0
; Line 384
	mov	eax, ecx
; Line 596
	mov	DWORD PTR [ecx+4], 0
; Line 384
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0$0A@X@?$span@H$0?0@gsl@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0$0A@X@?$span@H$0?0@gsl@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0$0A@X@?$span@H$0?0@gsl@@QAE@XZ ENDP		; gsl::span<int,-1>::span<int,-1><0,void>
; Function compile flags: /Ogtp
;	COMDAT ?data@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QBEPAHXZ
_TEXT	SEGMENT
?data@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QBEPAHXZ PROC ; gsl::span<int,-1>::storage_type<gsl::details::extent_type<-1> >::data, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 602
	mov	eax, DWORD PTR [ecx+4]
	ret	0
?data@?$storage_type@V?$extent_type@$0?0@details@gsl@@@?$span@H$0?0@gsl@@QBEPAHXZ ENDP ; gsl::span<int,-1>::storage_type<gsl::details::extent_type<-1> >::data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?data@?$span@H$0?0@gsl@@QBEPAHXZ
_TEXT	SEGMENT
?data@?$span@H$0?0@gsl@@QBEPAHXZ PROC			; gsl::span<int,-1>::data, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 515
	mov	eax, DWORD PTR [ecx+4]
	ret	0
?data@?$span@H$0?0@gsl@@QBEPAHXZ ENDP			; gsl::span<int,-1>::data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?size@?$span@H$0?0@gsl@@QBEHXZ
_TEXT	SEGMENT
?size@?$span@H$0?0@gsl@@QBEHXZ PROC			; gsl::span<int,-1>::size, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 498
	mov	eax, DWORD PTR [ecx]
	ret	0
?size@?$span@H$0?0@gsl@@QBEHXZ ENDP			; gsl::span<int,-1>::size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__FautoRegistrar1@?A0xea02b608@@YAXXZ
text$yd	SEGMENT
??__FautoRegistrar1@?A0xea02b608@@YAXXZ PROC		; `anonymous namespace'::`dynamic atexit destructor for 'autoRegistrar1'', COMDAT
	mov	ecx, OFFSET ?autoRegistrar1@?A0xea02b608@@3UAutoReg@Catch@@A ; `anonymous namespace'::autoRegistrar1
	jmp	??1AutoReg@Catch@@UAE@XZ		; Catch::AutoReg::~AutoReg
??__FautoRegistrar1@?A0xea02b608@@YAXXZ ENDP		; `anonymous namespace'::`dynamic atexit destructor for 'autoRegistrar1''
text$yd	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__EautoRegistrar1@?A0xea02b608@@YAXXZ
text$di	SEGMENT
$T1 = -36						; size = 24
$T2 = -12						; size = 8
??__EautoRegistrar1@?A0xea02b608@@YAXXZ PROC		; `anonymous namespace'::`dynamic initializer for 'autoRegistrar1'', COMDAT
; File c:\projects\gsl\tests\span_compile_only.cpp
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	OFFSET ??_C@_00CNPNBAHC@@
	call	??0StringRef@Catch@@QAE@PBD@Z		; Catch::StringRef::StringRef
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	OFFSET ??_C@_0BE@FAFDKEMK@default_constructor@
	call	??0StringRef@Catch@@QAE@PBD@Z		; Catch::StringRef::StringRef
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0NameAndTags@Catch@@QAE@VStringRef@1@0@Z ; Catch::NameAndTags::NameAndTags
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	OFFSET ??_C@_00CNPNBAHC@@
	call	??0StringRef@Catch@@QAE@PBD@Z		; Catch::StringRef::StringRef
	push	56					; 00000038H
	push	OFFSET ??_C@_0CM@KPAFLPEB@c?3?2projects?2gsl?2tests?2span_comp@
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0SourceLineInfo@Catch@@QAE@PBDI@Z	; Catch::SourceLineInfo::SourceLineInfo
	push	eax
	push	OFFSET ?____C_A_T_C_H____T_E_S_T____0@@YAXXZ ; ____C_A_T_C_H____T_E_S_T____0
	call	?makeTestInvoker@Catch@@YAPAUITestInvoker@1@P6AXXZ@Z ; Catch::makeTestInvoker
	add	esp, 4
	mov	ecx, OFFSET ?autoRegistrar1@?A0xea02b608@@3UAutoReg@Catch@@A ; `anonymous namespace'::autoRegistrar1
	push	eax
	call	??0AutoReg@Catch@@QAE@PAUITestInvoker@1@ABUSourceLineInfo@1@VStringRef@1@ABUNameAndTags@1@@Z ; Catch::AutoReg::AutoReg
	lea	ecx, DWORD PTR $T1[ebp+12]
	call	??1StringRef@Catch@@QAE@XZ		; Catch::StringRef::~StringRef
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1StringRef@Catch@@QAE@XZ		; Catch::StringRef::~StringRef
	push	OFFSET ??__FautoRegistrar1@?A0xea02b608@@YAXXZ ; `anonymous namespace'::`dynamic atexit destructor for 'autoRegistrar1''
	call	_atexit
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
??__EautoRegistrar1@?A0xea02b608@@YAXXZ ENDP		; `anonymous namespace'::`dynamic initializer for 'autoRegistrar1''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?____C_A_T_C_H____T_E_S_T____0@@YAXXZ
_TEXT	SEGMENT
_catchAssertionHandler$4 = -116				; size = 40
_catchAssertionHandler$5 = -76				; size = 40
$T6 = -36						; size = 8
$T7 = -36						; size = 8
$T8 = -28						; size = 8
$T9 = -28						; size = 8
__$EHRec$ = -16						; size = 16
?____C_A_T_C_H____T_E_S_T____0@@YAXXZ PROC		; ____C_A_T_C_H____T_E_S_T____0, COMDAT
; File c:\projects\gsl\tests\span_compile_only.cpp
; Line 57
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; File c:\projects\gsl\include\gsl\span
; Line 384
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LL4@C_A_T_C_H_:
; File c:\projects\gsl\tests\span_compile_only.cpp
; Line 60
	push	2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	OFFSET ??_C@_0CH@JINBLNPO@?$CIs?4size?$CI?$CJ?5?$DN?$DN?50?5?$CG?$CG?5s?4data?$CI?$CJ?5?$DN?$DN?5n@
	call	??0StringRef@Catch@@QAE@PBD@Z		; Catch::StringRef::StringRef
	push	60					; 0000003cH
	push	OFFSET ??_C@_0CM@KPAFLPEB@c?3?2projects?2gsl?2tests?2span_comp@
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0SourceLineInfo@Catch@@QAE@PBDI@Z	; Catch::SourceLineInfo::SourceLineInfo
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	OFFSET ??_C@_05GCOJDIEO@CHECK@
	call	??0StringRef@Catch@@QAE@PBD@Z		; Catch::StringRef::StringRef
	lea	ecx, DWORD PTR _catchAssertionHandler$5[ebp]
	call	??0AssertionHandler@Catch@@QAE@VStringRef@1@ABUSourceLineInfo@1@0W4Flags@ResultDisposition@1@@Z ; Catch::AssertionHandler::AssertionHandler
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1035
	mov	DWORD PTR $T9[ebp], OFFSET ??_7?$UnaryExpr@_N@Catch@@6B@
	mov	BYTE PTR $T9[ebp+4], 1
; Line 1233
	lea	eax, DWORD PTR $T9[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	push	eax
	lea	ecx, DWORD PTR _catchAssertionHandler$5[ebp]
	call	?handle@AssertionHandler@Catch@@QAEXABUITransientExpression@2@@Z ; Catch::AssertionHandler::handle
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1ITransientExpression@Catch@@UAE@XZ	; Catch::ITransientExpression::~ITransientExpression
$LN30@C_A_T_C_H_:
; File c:\projects\gsl\tests\span_compile_only.cpp
; Line 60
	lea	ecx, DWORD PTR _catchAssertionHandler$5[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	call	?shouldDebugBreak@AssertionHandler@Catch@@QBE_NXZ ; Catch::AssertionHandler::shouldDebugBreak
	test	al, al
	je	SHORT $LN10@C_A_T_C_H_
	call	?isDebuggerActive@Catch@@YA_NXZ		; Catch::isDebuggerActive
	test	al, al
	je	SHORT $LN10@C_A_T_C_H_
	int	3
$LN10@C_A_T_C_H_:
	lea	ecx, DWORD PTR _catchAssertionHandler$5[ebp]
	call	?reactWithoutDebugBreak@AssertionHandler@Catch@@QBEXXZ ; Catch::AssertionHandler::reactWithoutDebugBreak
	lea	ecx, DWORD PTR _catchAssertionHandler$5[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	??1AssertionHandler@Catch@@QAE@XZ	; Catch::AssertionHandler::~AssertionHandler
	push	0
	call	?isTrue@Catch@@YA_N_N@Z			; Catch::isTrue
	add	esp, 4
	test	al, al
	jne	$LL4@C_A_T_C_H_
; File c:\projects\gsl\include\gsl\span
; Line 384
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LL7@C_A_T_C_H_:
; File c:\projects\gsl\tests\span_compile_only.cpp
; Line 63
	push	2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	OFFSET ??_C@_0CJ@IEJGAEAC@?$CIcs?4size?$CI?$CJ?5?$DN?$DN?50?5?$CG?$CG?5cs?4data?$CI?$CJ?5?$DN?$DN@
	call	??0StringRef@Catch@@QAE@PBD@Z		; Catch::StringRef::StringRef
	push	63					; 0000003fH
	push	OFFSET ??_C@_0CM@KPAFLPEB@c?3?2projects?2gsl?2tests?2span_comp@
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0SourceLineInfo@Catch@@QAE@PBDI@Z	; Catch::SourceLineInfo::SourceLineInfo
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	OFFSET ??_C@_05GCOJDIEO@CHECK@
	call	??0StringRef@Catch@@QAE@PBD@Z		; Catch::StringRef::StringRef
	lea	ecx, DWORD PTR _catchAssertionHandler$4[ebp]
	call	??0AssertionHandler@Catch@@QAE@VStringRef@1@ABUSourceLineInfo@1@0W4Flags@ResultDisposition@1@@Z ; Catch::AssertionHandler::AssertionHandler
	mov	DWORD PTR __$EHRec$[ebp+12], 6
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1035
	mov	DWORD PTR $T8[ebp], OFFSET ??_7?$UnaryExpr@_N@Catch@@6B@
	mov	BYTE PTR $T8[ebp+4], 1
; Line 1233
	lea	eax, DWORD PTR $T8[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	push	eax
	lea	ecx, DWORD PTR _catchAssertionHandler$4[ebp]
	call	?handle@AssertionHandler@Catch@@QAEXABUITransientExpression@2@@Z ; Catch::AssertionHandler::handle
	lea	ecx, DWORD PTR $T8[ebp]
	call	??1ITransientExpression@Catch@@UAE@XZ	; Catch::ITransientExpression::~ITransientExpression
$LN32@C_A_T_C_H_:
; File c:\projects\gsl\tests\span_compile_only.cpp
; Line 63
	lea	ecx, DWORD PTR _catchAssertionHandler$4[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 6
	call	?shouldDebugBreak@AssertionHandler@Catch@@QBE_NXZ ; Catch::AssertionHandler::shouldDebugBreak
	test	al, al
	je	SHORT $LN13@C_A_T_C_H_
	call	?isDebuggerActive@Catch@@YA_NXZ		; Catch::isDebuggerActive
	test	al, al
	je	SHORT $LN13@C_A_T_C_H_
	int	3
$LN13@C_A_T_C_H_:
	lea	ecx, DWORD PTR _catchAssertionHandler$4[ebp]
	call	?reactWithoutDebugBreak@AssertionHandler@Catch@@QBEXXZ ; Catch::AssertionHandler::reactWithoutDebugBreak
	lea	ecx, DWORD PTR _catchAssertionHandler$4[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	??1AssertionHandler@Catch@@QAE@XZ	; Catch::AssertionHandler::~AssertionHandler
	push	0
	call	?isTrue@Catch@@YA_N_N@Z			; Catch::isTrue
	add	esp, 4
	test	al, al
	jne	$LL7@C_A_T_C_H_
; Line 65
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__catch$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$0:
; Line 60
	lea	ecx, DWORD PTR _catchAssertionHandler$5[ebp]
	call	?useActiveException@AssertionHandler@Catch@@QAEXXZ ; Catch::AssertionHandler::useActiveException
	mov	eax, $LN30@C_A_T_C_H_
	ret	0
__catch$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$2:
; Line 63
	lea	ecx, DWORD PTR _catchAssertionHandler$4[ebp]
	call	?useActiveException@AssertionHandler@Catch@@QAEXXZ ; Catch::AssertionHandler::useActiveException
	mov	eax, $LN32@C_A_T_C_H_
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$6:
	lea	ecx, DWORD PTR _catchAssertionHandler$5[ebp]
	jmp	??1AssertionHandler@Catch@@QAE@XZ	; Catch::AssertionHandler::~AssertionHandler
__unwindfunclet$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$17:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1?$UnaryExpr@_N@Catch@@UAE@XZ
__unwindfunclet$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$9:
	lea	ecx, DWORD PTR _catchAssertionHandler$4[ebp]
	jmp	??1AssertionHandler@Catch@@QAE@XZ	; Catch::AssertionHandler::~AssertionHandler
__unwindfunclet$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ$26:
	lea	ecx, DWORD PTR $T8[ebp]
	jmp	??1?$UnaryExpr@_N@Catch@@UAE@XZ
__ehhandler$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?____C_A_T_C_H____T_E_S_T____0@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?____C_A_T_C_H____T_E_S_T____0@@YAXXZ ENDP		; ____C_A_T_C_H____T_E_S_T____0
; Function compile flags: /Ogtp
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 44
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	esi, DWORD PTR __Lobj$[ebp]
; Line 217
	lea	eax, DWORD PTR $T1[ebp]
	push	edi
	mov	edi, ecx
	mov	ecx, esi
	push	eax
	call	DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
; Line 221
	mov	ecx, esi
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [edi+24], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [edi+40], xmm0
	movq	xmm0, QWORD PTR [eax+32]
	movq	QWORD PTR [edi+56], xmm0
	mov	eax, DWORD PTR [eax+40]
	mov	DWORD PTR [edi+64], eax
	call	DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
	push	eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
	add	esp, 4
	mov	DWORD PTR [edi+8], eax
; Line 222
	mov	ecx, esi
	call	DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
	push	eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
; Line 223
	push	OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	mov	DWORD PTR [edi+12], eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
; Line 231
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	mov	DWORD PTR [edi+16], eax
	xor	ecx, ebp
	pop	edi
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 44
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 2
__Lobj$ = 12						; size = 4
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xloctime
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	esi, DWORD PTR __Lobj$[ebp]
; Line 217
	lea	eax, DWORD PTR $T1[ebp]
	push	edi
	mov	edi, ecx
	mov	ecx, esi
	push	eax
	call	DWORD PTR __imp_?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
; Line 221
	mov	ecx, esi
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [edi+24], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [edi+40], xmm0
	movq	xmm0, QWORD PTR [eax+32]
	movq	QWORD PTR [edi+56], xmm0
	mov	eax, DWORD PTR [eax+40]
	mov	DWORD PTR [edi+64], eax
	call	DWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QBEPBGXZ
	push	eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
	add	esp, 4
	mov	DWORD PTR [edi+8], eax
; Line 222
	mov	ecx, esi
	call	DWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QBEPBGXZ
	push	eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
; Line 223
	push	OFFSET ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	mov	DWORD PTR [edi+12], eax
	call	?_Maklocwcs@std@@YAPA_WPB_W@Z		; std::_Maklocwcs
; Line 231
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	mov	DWORD PTR [edi+16], eax
	xor	ecx, ebp
	pop	edi
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IAEX_WABV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$throw_exception@Ufail_fast@gsl@@@details@gsl@@YAX$$QAUfail_fast@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
_exception$ = 8						; size = 4
??$throw_exception@Ufail_fast@gsl@@@details@gsl@@YAX$$QAUfail_fast@1@@Z PROC ; gsl::details::throw_exception<gsl::fail_fast>, COMDAT
; File c:\projects\gsl\include\gsl\gsl_assert
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 138
	push	DWORD PTR _exception$[ebp]
	call	??$forward@Ufail_fast@gsl@@@std@@YA$$QAUfail_fast@gsl@@AAU12@@Z ; std::forward<gsl::fail_fast>
	add	esp, 4
	lea	ecx, DWORD PTR $T1[ebp]
	push	eax
	call	??0fail_fast@gsl@@QAE@$$QAU01@@Z
	push	OFFSET __TI3?AUfail_fast@gsl@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@throw_exce:
	int	3
??$throw_exception@Ufail_fast@gsl@@@details@gsl@@YAX$$QAUfail_fast@1@@Z ENDP ; gsl::details::throw_exception<gsl::fail_fast>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?size@?$extent_type@$0?0@details@gsl@@QBEHXZ
_TEXT	SEGMENT
?size@?$extent_type@$0?0@details@gsl@@QBEHXZ PROC	; gsl::details::extent_type<-1>::size, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\span
; Line 338
	mov	eax, DWORD PTR [ecx]
	ret	0
?size@?$extent_type@$0?0@details@gsl@@QBEHXZ ENDP	; gsl::details::extent_type<-1>::size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_Gfail_fast@gsl@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gfail_fast@gsl@@UAEPAXI@Z PROC			; gsl::fail_fast::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 85
	push	esi
	mov	esi, ecx
; Line 86
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	call	___std_exception_destroy
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN12@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN12@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gfail_fast@gsl@@UAEPAXI@Z ENDP			; gsl::fail_fast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0fail_fast@gsl@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0fail_fast@gsl@@QAE@$$QAU01@@Z PROC			; gsl::fail_fast::fail_fast, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 68
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
; Line 67
	lea	eax, DWORD PTR [esi+4]
; Line 69
	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	call	___std_exception_copy
	add	esp, 8
	mov	DWORD PTR [esi], OFFSET ??_7fail_fast@gsl@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0fail_fast@gsl@@QAE@$$QAU01@@Z ENDP			; gsl::fail_fast::fail_fast
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0fail_fast@gsl@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0fail_fast@gsl@@QAE@ABU01@@Z PROC			; gsl::fail_fast::fail_fast, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 68
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
; Line 67
	lea	eax, DWORD PTR [esi+4]
; Line 69
	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	call	___std_exception_copy
	add	esp, 8
	mov	DWORD PTR [esi], OFFSET ??_7fail_fast@gsl@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0fail_fast@gsl@@QAE@ABU01@@Z ENDP			; gsl::fail_fast::fail_fast
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1fail_fast@gsl@@UAE@XZ
_TEXT	SEGMENT
??1fail_fast@gsl@@UAE@XZ PROC				; gsl::fail_fast::~fail_fast, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 86
	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
	push	eax
	call	___std_exception_destroy
	pop	ecx
	ret	0
??1fail_fast@gsl@@UAE@XZ ENDP				; gsl::fail_fast::~fail_fast
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0fail_fast@gsl@@QAE@QBD@Z
_TEXT	SEGMENT
__InitData$1 = -8					; size = 8
_this$ = -4						; size = 4
_message$ = 8						; size = 4
??0fail_fast@gsl@@QAE@QBD@Z PROC			; gsl::fail_fast::fail_fast, COMDAT
; _this$ = ecx
; File c:\projects\gsl\include\gsl\gsl_assert
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 56
	mov	eax, DWORD PTR _message$[ebp]
	xorps	xmm0, xmm0
; File c:\projects\gsl\include\gsl\gsl_assert
; Line 93
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 54
	lea	edx, DWORD PTR [esi+4]
; Line 56
	mov	DWORD PTR __InitData$1[ebp], eax
; Line 57
	lea	eax, DWORD PTR __InitData$1[ebp]
	push	edx
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	movq	QWORD PTR [edx], xmm0
	mov	BYTE PTR __InitData$1[ebp+4], 1
	call	___std_exception_copy
	add	esp, 8
; File c:\projects\gsl\include\gsl\gsl_assert
; Line 93
	mov	DWORD PTR [esi], OFFSET ??_7fail_fast@gsl@@6B@
	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0fail_fast@gsl@@QAE@QBD@Z ENDP			; gsl::fail_fast::fail_fast
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?makeUnaryExpr@?$ExprLhs@_N@Catch@@QBE?AV?$UnaryExpr@_N@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?makeUnaryExpr@?$ExprLhs@_N@Catch@@QBE?AV?$UnaryExpr@_N@2@XZ PROC ; Catch::ExprLhs<bool>::makeUnaryExpr, COMDAT
; _this$ = ecx
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1100
	push	ebp
	mov	ebp, esp
; Line 1035
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR [ecx]
	mov	DWORD PTR [eax], OFFSET ??_7?$UnaryExpr@_N@Catch@@6B@
	mov	BYTE PTR [eax+4], cl
; Line 1102
	pop	ebp
	ret	4
?makeUnaryExpr@?$ExprLhs@_N@Catch@@QBE?AV?$UnaryExpr@_N@2@XZ ENDP ; Catch::ExprLhs<bool>::makeUnaryExpr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$ExprLhs@_N@Catch@@QAE@_N@Z
_TEXT	SEGMENT
_lhs$ = 8						; size = 1
??0?$ExprLhs@_N@Catch@@QAE@_N@Z PROC			; Catch::ExprLhs<bool>::ExprLhs<bool>, COMDAT
; _this$ = ecx
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1065
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _lhs$[ebp]
	mov	BYTE PTR [ecx], al
	mov	eax, ecx
	pop	ebp
	ret	4
??0?$ExprLhs@_N@Catch@@QAE@_N@Z ENDP			; Catch::ExprLhs<bool>::ExprLhs<bool>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??NDecomposer@Catch@@QAE?AV?$ExprLhs@_N@1@_N@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_value$ = 12						; size = 1
??NDecomposer@Catch@@QAE?AV?$ExprLhs@_N@1@_N@Z PROC	; Catch::Decomposer::operator<=, COMDAT
; _this$ = ecx
; File c:\projects\gsl\build\external\include\catch\catch.hpp
; Line 1117
	push	ebp
	mov	ebp, esp
; Line 1065
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
; Line 1119
	pop	ebp
	ret	8
??NDecomposer@Catch@@QAE?AV?$ExprLhs@_N@1@_N@Z ENDP	; Catch::Decomposer::operator<=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GITransientExpression@Catch@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GITransientExpression@Catch@@UAEPAXI@Z PROC		; Catch::ITransientExpression::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1ITransientExpression@Catch@@UAE@XZ	; Catch::ITransientExpression::~ITransientExpression
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar
	push	4
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN4@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GITransientExpression@Catch@@UAEPAXI@Z ENDP		; Catch::ITransientExpression::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0ITransientExpression@Catch@@QAE@XZ
_TEXT	SEGMENT
??0ITransientExpression@Catch@@QAE@XZ PROC		; Catch::ITransientExpression::ITransientExpression, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7ITransientExpression@Catch@@6B@
	mov	eax, ecx
	ret	0
??0ITransientExpression@Catch@@QAE@XZ ENDP		; Catch::ITransientExpression::ITransientExpression
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1NameAndTags@Catch@@QAE@XZ
_TEXT	SEGMENT
??1NameAndTags@Catch@@QAE@XZ PROC			; Catch::NameAndTags::~NameAndTags, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	call	??1StringRef@Catch@@QAE@XZ		; Catch::StringRef::~StringRef
	mov	ecx, esi
	pop	esi
	jmp	??1StringRef@Catch@@QAE@XZ		; Catch::StringRef::~StringRef
??1NameAndTags@Catch@@QAE@XZ ENDP			; Catch::NameAndTags::~NameAndTags
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Maklocwcs@std@@YAPA_WPB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Maklocwcs@std@@YAPA_WPB_W@Z PROC			; std::_Maklocwcs, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; Line 97
	push	ebp
	mov	ebp, esp
; Line 98
	mov	eax, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [eax+2]
	npad	7
$LL6@Maklocwcs:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL6@Maklocwcs
	sub	eax, edx
	push	ebx
	sar	eax, 1
	push	esi
; Line 100
	push	2
	lea	ebx, DWORD PTR [eax+1]
	push	ebx
	call	DWORD PTR __imp__calloc
	mov	esi, eax
	add	esp, 8
; Line 103
	test	esi, esi
	je	SHORT $LN9@Maklocwcs
; File c:\program files (x86)\windows kits\10\include\10.0.14393.0\ucrt\wchar.h
; Line 232
	lea	eax, DWORD PTR [ebx+ebx]
	push	eax
	push	DWORD PTR __Ptr$[ebp]
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocnum
; Line 106
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 107
	pop	ebp
	ret	0
$LN9@Maklocwcs:
; Line 104
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN7@Maklocwcs:
	int	3
?_Maklocwcs@std@@YAPA_WPB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z
_TEXT	SEGMENT
__Mbst2$ = -24						; size = 8
__Mbst1$ = -16						; size = 8
__Count1$1$ = -8					; size = 4
__Wc$ = -4						; size = 2
__Ptrdest$1$ = 8					; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
__Cvt$ = 16						; size = 4
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z PROC	; std::_Maklocstr<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xlocale
; Line 682
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	ebx
; Line 690
	mov	ebx, DWORD PTR __Ptr$[ebp]
	xorps	xmm0, xmm0
	mov	ecx, ebx
	movlpd	QWORD PTR __Mbst1$[ebp], xmm0
	push	esi
	push	edi
	lea	edx, DWORD PTR [ecx+1]
	npad	7
$LL22@Maklocstr:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL22@Maklocstr
	sub	ecx, edx
; Line 691
	xor	esi, esi
	lea	eax, DWORD PTR [ecx+1]
	mov	DWORD PTR __Count1$1$[ebp], eax
	mov	edi, eax
	test	eax, eax
	je	SHORT $LN14@Maklocstr
$LL4@Maklocstr:
; Line 693
	push	DWORD PTR __Cvt$[ebp]
	lea	eax, DWORD PTR __Mbst1$[ebp]
	push	eax
	push	edi
	lea	eax, DWORD PTR __Wc$[ebp]
	push	ebx
	push	eax
	call	__Mbrtowc
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN23@Maklocstr
; Line 692
	add	ebx, eax
	inc	esi
	sub	edi, eax
	jne	SHORT $LL4@Maklocstr
$LN23@Maklocstr:
	mov	ebx, DWORD PTR __Ptr$[ebp]
$LN14@Maklocstr:
; Line 695
	inc	esi
; Line 697
	push	2
	push	esi
	call	DWORD PTR __imp__calloc
	add	esp, 8
	mov	DWORD PTR __Ptrdest$1$[ebp], eax
; Line 700
	test	eax, eax
	je	SHORT $LN27@Maklocstr
; Line 702
	xorps	xmm0, xmm0
	mov	edi, eax
; Line 703
	movlpd	QWORD PTR __Mbst2$[ebp], xmm0
; Line 705
	test	esi, esi
	je	SHORT $LN15@Maklocstr
	npad	4
$LL7@Maklocstr:
; Line 707
	push	DWORD PTR __Cvt$[ebp]
	lea	eax, DWORD PTR __Mbst2$[ebp]
	push	eax
	push	DWORD PTR __Count1$1$[ebp]
	push	ebx
	push	edi
	call	__Mbrtowc
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN24@Maklocstr
; Line 706
	add	ebx, eax
	add	edi, 2
	sub	esi, 1
	jne	SHORT $LL7@Maklocstr
$LN24@Maklocstr:
	mov	eax, DWORD PTR __Ptrdest$1$[ebp]
$LN15@Maklocstr:
; Line 709
	xor	ecx, ecx
	mov	WORD PTR [edi], cx
; Line 711
	pop	edi
	pop	esi
	pop	ebx
; Line 712
	mov	esp, ebp
	pop	ebp
	ret	0
$LN27@Maklocstr:
; Line 701
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN25@Maklocstr:
	int	3
??$_Maklocstr@_W@std@@YAPA_WPBDPA_WABU_Cvtvec@@@Z ENDP	; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3984
	push	esi
	mov	esi, ecx
; Line 1825
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
; Line 3987
	jb	SHORT $LN41@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3992
	inc	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 201
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN40@Tidy_deall
; Line 118
	mov	edx, DWORD PTR [eax-4]
	add	ecx, 35					; 00000023H
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN37@Tidy_deall
; Line 133
	mov	eax, edx
$LN40@Tidy_deall:
; Line 207
	push	ecx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN41@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3995
	mov	DWORD PTR [esi+16], 0
; Line 3996
	mov	DWORD PTR [esi+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 506
	mov	BYTE PTR [esi], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 4000
	ret	0
$LN37@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN46@Tidy_deall:
	int	3
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3302
	mov	eax, DWORD PTR [ecx+16]
; Line 3303
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
; Line 1815
	jb	SHORT $LN14@data
; Line 3285
	mov	eax, DWORD PTR [ecx]
; Line 3286
	ret	0
$LN14@data:
; Line 3285
	mov	eax, ecx
; Line 3286
	ret	0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2459
	push	esi
	mov	esi, ecx
; Line 1825
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
; Line 3987
	jb	SHORT $LN43@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	mov	eax, DWORD PTR [esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3992
	inc	ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 201
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN42@basic_stri
; Line 118
	mov	edx, DWORD PTR [eax-4]
	add	ecx, 35					; 00000023H
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN39@basic_stri
; Line 133
	mov	eax, edx
$LN42@basic_stri:
; Line 207
	push	ecx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN43@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3995
	mov	DWORD PTR [esi+16], 0
; Line 3996
	mov	DWORD PTR [esi+20], 15			; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 506
	mov	BYTE PTR [esi], 0
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2461
	ret	0
$LN39@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN60@basic_stri:
	int	3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 307
	mov	eax, ecx
; Line 308
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 302
	mov	eax, ecx
; Line 303
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 292
	mov	eax, ecx
; Line 293
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2048
	mov	eax, ecx
; Line 2049
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2043
	mov	eax, ecx
; Line 2044
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2033
	mov	eax, ecx
; Line 2034
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2024
	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1862
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	setae	al
; Line 1826
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
; Line 1815
	jb	SHORT $LN8@Myptr
; Line 1820
	mov	eax, DWORD PTR [ecx]
; Line 1821
	ret	0
$LN8@Myptr:
; Line 1820
	mov	eax, ecx
; Line 1821
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXQADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXQADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 990
	push	ebp
	mov	ebp, esp
; Line 992
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 201
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN15@deallocate
; Line 118
	mov	edx, DWORD PTR [eax-4]
	add	ecx, 35					; 00000023H
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN12@deallocate
; Line 133
	mov	eax, edx
$LN15@deallocate:
; Line 207
	push	ecx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
; Line 993
	pop	ebp
	ret	8
$LN12@deallocate:
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@deallocate:
	int	3
?deallocate@?$allocator@D@std@@QAEXQADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 85
	push	esi
	mov	esi, ecx
; Line 86
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	call	___std_exception_destroy
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN9@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN9@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0logic_error@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0logic_error@std@@QAE@$$QAV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 68
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
; Line 67
	lea	eax, DWORD PTR [esi+4]
; Line 69
	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	call	___std_exception_copy
	add	esp, 8
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0logic_error@std@@QAE@$$QAV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 68
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
; Line 67
	lea	eax, DWORD PTR [esi+4]
; Line 69
	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	call	___std_exception_copy
	add	esp, 8
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 86
	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
	push	eax
	call	___std_exception_destroy
	pop	ecx
	ret	0
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0logic_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
__InitData$1 = -8					; size = 8
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@PBD@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\stdexcept
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 56
	mov	eax, DWORD PTR __Message$[ebp]
	xorps	xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\stdexcept
; Line 30
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 54
	lea	edx, DWORD PTR [esi+4]
; Line 56
	mov	DWORD PTR __InitData$1[ebp], eax
; Line 57
	lea	eax, DWORD PTR __InitData$1[ebp]
	push	edx
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	movq	QWORD PTR [edx], xmm0
	mov	BYTE PTR __InitData$1[ebp+4], 1
	call	___std_exception_copy
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\stdexcept
; Line 30
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
; Line 31
	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@PBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR __Bytes$[ebp]
; Line 118
	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	DWORD PTR [eax], 35			; 00000023H
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax-4]
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN7@Adjust_man
; Line 133
	mov	DWORD PTR [ecx], edx
; Line 134
	pop	ebp
	ret	0
$LN7@Adjust_man:
; Line 132
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 43
	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 85
	push	esi
	mov	esi, ecx
; Line 86
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	call	___std_exception_destroy
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar
	push	12					; 0000000cH
	push	esi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN6@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 91
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
	test	ecx, ecx
	cmovne	eax, ecx
; Line 92
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 86
	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
	push	eax
	call	___std_exception_destroy
	pop	ecx
; Line 87
	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 68
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	xorps	xmm0, xmm0
	lea	eax, DWORD PTR [esi+4]
; Line 69
	push	eax
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	movq	QWORD PTR [eax], xmm0
	mov	eax, DWORD PTR __Other$[ebp]
	add	eax, 4
	push	eax
	call	___std_exception_copy
	add	esp, 8
; Line 70
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0exception@std@@QAE@QBD@Z
_TEXT	SEGMENT
__InitData$ = -8					; size = 8
__Message$ = 8						; size = 4
??0exception@std@@QAE@QBD@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_exception.h
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 56
	mov	eax, DWORD PTR __Message$[ebp]
	xorps	xmm0, xmm0
	push	esi
	mov	esi, ecx
	mov	DWORD PTR __InitData$[ebp], eax
	lea	edx, DWORD PTR [esi+4]
	mov	BYTE PTR __InitData$[ebp+4], 1
; Line 57
	push	edx
	lea	eax, DWORD PTR __InitData$[ebp]
	mov	DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
	push	eax
	movq	QWORD PTR [edx], xmm0
	call	___std_exception_copy
	add	esp, 8
; Line 58
	mov	eax, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@QBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 541
	or	eax, -1
; Line 542
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 530
	push	ebp
	mov	ebp, esp
; Line 531
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [eax]
	sete	al
; Line 532
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 505
	push	ebp
	mov	ebp, esp
; Line 506
	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	eax, DWORD PTR __Left$[ebp]
	mov	BYTE PTR [eax], cl
; Line 507
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.14393.0\ucrt\wchar.h
; Line 229
	push	ebp
	mov	ebp, esp
; Line 232
	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	mov	DWORD PTR __N$[ebp], eax
; Line 234
	pop	ebp
; Line 232
	jmp	_memcpy
_wmemcpy ENDP
_TEXT	ENDS
END
